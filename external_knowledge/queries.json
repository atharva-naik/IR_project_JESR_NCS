[{"query": "Called for each declared attribute for an element `type` . `elname` is the name of the element to which the declaration applies and `attname` is the name of the attribute declared . The attribute type is a string passed as type ; the possible values are 'CDATA ' , 'ID ' , 'IDREF ' , \u2026 `default` gives the default value for the attribute used when the attribute is not specified by the document instance , or None if there is no default value ( # IMPLIED values ) . If the attribute is `required` to be given in the document instance , required will be true .", "docs": [0]}, {"query": "The comment associated with the ZIP file as a bytes object.", "docs": [1]}, {"query": "Called when Expat is done parsing the document type declaration .", "docs": [2]}, {"query": "Define how a single command-line argument should be parsed . With arguments `name or flags...`, `action`, `nargs`, `const`, `default`.", "docs": [3]}, {"query": "This subclass of TextCalendar can be passed a `locale` name in the constructor and will return month and weekday names in the specified locale . With arguments `firstweekday`.", "docs": [4]}, {"query": "Return the PEP 3147/PEP 488 `path` to the byte-compiled file associated with the source path . The `debug_override` parameter is deprecated and can be used to override the system \u2019 s value for __debug__ . The `optimization` parameter is used to specify the optimization level of the bytecode file .", "docs": [5]}, {"query": "Add `headers` and payload to `msg` : If `params` is specified , iterate its items method and use the resulting ( key , value ) pairs to set additional parameters on the Content-Type header . With arguments `<'bytes'>`, `maintype`, `subtype`.", "docs": [6]}, {"query": "This function returns a tuple of three values that give information about the exception that is currently being handled .", "docs": [7]}, {"query": "Clean up the server .", "docs": [8]}, {"query": "The name of the variable.", "docs": [9]}, {"query": "Return the current collection counts as a tuple of ( count0 , count1 , count2 ) .", "docs": [10]}, {"query": "Same as article ( ) , but sends a HEAD command . The lines returned ( or written to `file` ) will only contain the message headers , not the body .", "docs": [11]}, {"query": "Alias for GetoptError; for backward compatibility.", "docs": [12]}, {"query": "ABC for coroutine compatible classes.", "docs": [13]}, {"query": "Legacy variant of the ConfigParser . It has `interpolation` disabled by default and allows for non-string section names , option names , and values via its unsafe add_section and set methods , as well as the legacy defaults= keyword argument handling . With arguments `':')`, `';')`, `comment_prefixes`.", "docs": [14]}, {"query": "Converts the dataclass `instance` to a dict ( by using the factory function `dict_factory` ) .", "docs": [15, 16]}, {"query": "The subnets that join to make the current network definition , depending on the argument values . `prefixlen_diff` is the amount our prefix length should be increased by .", "docs": [17]}, {"query": "Parse a query in the environment or from a file ( the file defaults to sys.stdin ) . With arguments `environ`.", "docs": [18]}, {"query": "Returns the item ID of the item at position `y` .", "docs": [19]}, {"query": "Remove directories recursively . With arguments `name`.", "docs": [20]}, {"query": "Like find ( ) , but raise ValueError when the subsequence is not found . With arguments `sub`, `start`, `end`.", "docs": [21]}, {"query": "Returns a new instance of the WatchedFileHandler class . If `mode` is not specified , ' a ' is used . If `delay` is true , then file opening is deferred until the first call to emit ( ) . With arguments `filename`.", "docs": [22]}, {"query": "This behaves exactly like walk ( ) , except that it yields a 4-tuple ( dirpath , dirnames , filenames , dirfd ) , and it supports `dir_fd` .", "docs": [23]}, {"query": "Set the window \u2019 s background . With arguments `ch`, `attr`.", "docs": [24]}, {"query": "Size of the memory block in bytes (int).", "docs": [25]}, {"query": "This method makes a backup of a SQLite database even while it \u2019 s being accessed by other clients , or concurrently by the same connection . The copy will be written into the mandatory argument `target` , that must be another Connection instance . By default , or when `pages` is either 0 or a negative integer , the entire database is copied in a single step ; otherwise the method performs a loop copying up to pages pages at a time .", "docs": [26]}, {"query": "Returns the current date and time , formatted for logging .", "docs": [27]}, {"query": "Set background image or return name of current backgroundimage . If `picname` is a filename , set the corresponding image as background .", "docs": [28]}, {"query": "Recursively descend the directory tree named by `dir` , compiling all .py files along the way . If `ddir` is given , it is prepended to the path to each file being compiled for use in compilation time tracebacks , and is also compiled in to the byte-code file , where it will be used in tracebacks and other messages in cases where the source file does not exist at the time the byte-code file is executed .", "docs": [29]}, {"query": "Base protocol with methods that all protocols share.", "docs": [30]}, {"query": "A FTP subclass which adds TLS support to FTP as described in RFC 4217 . With arguments `host`.", "docs": [31]}, {"query": "Return the time of last modification of `path` .", "docs": [32]}, {"query": "If you want to specify a subject line which is record-dependent , override this method . With arguments `record`.", "docs": [33]}, {"query": "Convert an IPv4 address from dotted-quad string format ( for example , \u2018 123.45.67.89 \u2019 ) to 32-bit packed binary format , as a bytes object four characters in length . With arguments `ip_string`.", "docs": [34]}, {"query": "Return the local date corresponding to the POSIX `timestamp` , such as is returned by time.time ( ) .", "docs": [35]}, {"query": "Returns a list of all known themes .", "docs": [36]}, {"query": "Analyse the bytecode corresponding to a function , generator , asynchronous generator , coroutine , method , string of source code , or a code object ( as returned by compile ( ) ) . If `first_line` is not None , it indicates the line number that should be reported for the first source line in the disassembled code . With arguments `x`.", "docs": [37]}, {"query": "Wait for the `aw` awaitable to complete with a `timeout` .", "docs": [38]}, {"query": "Module : email.mime.application `_data` is a string containing the raw byte data . Optional `_subtype` specifies the MIME subtype and defaults to octet-stream . With arguments `**_params`.", "docs": [39]}, {"query": "If the debugger should stop on the current line , invoke the user_line ( ) method ( which should be overridden in subclasses ) . With arguments `frame`.", "docs": [40]}, {"query": "This class provides run_script ( ) and report ( ) methods to determine the set of modules imported by a script . `excludes` is a list of module names to exclude from the analysis .", "docs": [41]}, {"query": "Print up to `limit` stack trace entries ( starting from the invocation point ) if limit is positive .", "docs": [42, 43]}, {"query": "A dispatcher subclass which adds simple buffered output capability, useful for simple clients.", "docs": [44]}, {"query": "Called for notation declarations . `notationName` , `base` , and `systemId` , and `publicId` are strings if given .", "docs": [45]}, {"query": "This method rolls back any changes to the database since the last call to commit ( ) .", "docs": [46]}, {"query": "This class implements the ContentHandler interface by writing SAX events back into an XML document . `out` should be a file-like object which will default to sys.stdout . `encoding` is the encoding of the output stream which defaults to 'iso-8859-1 ' .", "docs": [47]}, {"query": "The network (IPv4Network) this interface belongs to.", "docs": [48]}, {"query": "Return true for non-terminal token values . With arguments `x`.", "docs": [49]}, {"query": "Returns one or more subgroups of the match .", "docs": [50]}, {"query": "Convert a tuple or struct_time representing a time as returned by gmtime ( ) or localtime ( ) to a string of the following form : 'Sun Jun 20 23:21:05 1993 ' . If `t` is not provided , the current time as returned by localtime ( ) is used .", "docs": [51]}, {"query": "Implements the 'backslashreplace ' error handling ( for text encodings only ) : malformed data is replaced by a backslashed escape sequence . With arguments `exception`.", "docs": [52]}, {"query": "Compare the values of two Decimal instances . With arguments `other`, `context`.", "docs": [53]}, {"query": "Generate a UUID from a host ID , sequence number , and the current time .", "docs": [54]}, {"query": "Read and return the contents of the `resource` within `package` as bytes .", "docs": [55]}, {"query": "A synonym for open ( ) , maintained for backwards compatibility . With arguments `file`, `mode`.", "docs": [56, 57]}, {"query": "Raised when the interpreter finds an internal error, but the situation does not look so serious to cause it to abandon all hope.", "docs": [58]}, {"query": "The name of the operating system dependent module imported.", "docs": [59]}, {"query": "Generate a UUID from a host ID , sequence number , and the current time . If `clock_seq` is given , it is used as the sequence number ; otherwise a random 14-bit sequence number is chosen .", "docs": [60]}, {"query": "For a time t , str ( t ) is equivalent to t.isoformat ( ) .", "docs": [61]}, {"query": "This function is invoked by the import statement . The function imports the module `name` , potentially using the given `globals` and `locals` to determine how to interpret the name in a package context .", "docs": [62, 63, 64, 65]}, {"query": "Touch all locations in ancestors of the window that have been changed in the window .", "docs": [66]}, {"query": "The object the codec was attempting to encode or decode.", "docs": [67]}, {"query": "Convert binary `data` to a line ( s ) of ASCII characters in quoted-printable encoding . If the optional argument `istext` is present and true , newlines are not encoded but trailing whitespace will be encoded . If the optional argument `header` is present and true , spaces will be encoded as underscores per RFC 1522 .", "docs": [68]}, {"query": "Return a representation of a floating-point number as a hexadecimal string .", "docs": [69]}, {"query": "Return a list of all the keys used in the dictionary `d` .", "docs": [70]}, {"query": "Exit the process with status `n` , without calling cleanup handlers , flushing stdio buffers , etc .", "docs": [71]}, {"query": "A subclass of SSLError raised when certificate validation has failed.", "docs": [72]}, {"query": "Scheduling policy for sporadic server programs.", "docs": [73]}, {"query": "`authreq` should be the name of the header where the information about the realm is included in the request , `host` should be the host to authenticate to , `req` should be the ( failed ) Request object , and `headers` should be the error headers .", "docs": [74]}, {"query": "Display `url` using the browser handled by this controller . With arguments `autoraise`.", "docs": [75]}, {"query": "Return a 3-tuple ( login , account , password ) of authenticators for `host` .", "docs": [76]}, {"query": "Construct an IPv4 `address` .", "docs": [77]}, {"query": "Return a string or byte string containing the XML represented by the DOM node .", "docs": [78]}, {"query": "Run until the `future` ( an instance of Future ) has completed .", "docs": [79]}, {"query": "Optional argument `isjunk` must be None ( the default ) or `a` one-argument function that takes a sequence element and returns true if and only if the element is \u201c junk \u201d and should be ignored . The optional arguments a and `b` are sequences to be compared ; both default to empty strings .", "docs": [80, 81, 82]}, {"query": "Object is remote", "docs": [83]}, {"query": "When section is not given , return a list of section_name , section_proxy pairs , including DEFAULTSECT . With arguments `raw`.", "docs": [84]}, {"query": "This method is called from dispatch_line ( ) when either stop_here ( ) or break_here ( ) yields True . With arguments `frame`.", "docs": [85]}, {"query": "Equivalent to put ( `item` ) , provided for compatibility with Queue.put_nowait ( ) .", "docs": [86]}, {"query": "Subclass of SubprocessError, raised when a process run by check_call() or check_output() returns a non-zero exit status.", "docs": [87]}, {"query": "Assert that `iter` is deallocated after iterating . With arguments `test`, `cls`.", "docs": [88]}, {"query": "Open the file pointed to by the path , like the built-in open ( ) function does : With arguments `mode`, `buffering`.", "docs": [89]}, {"query": "For common and simple use cases , no other functionality is required . With arguments `hash`.", "docs": [90]}, {"query": "Return information about this path ( similarly to os.stat ( ) ) .", "docs": [91]}, {"query": "If the value for a header in the Message object originated from a parser (as opposed to being set by a program), this attribute indicates whether or not a generator should refold that value when transforming the message back into serialized form.", "docs": [92]}, {"query": "By  default, when reading from /dev/random, getrandom() blocks if no random bytes are available, and when reading from /dev/urandom, it blocks if the entropy pool has not yet been initialized.", "docs": [93]}, {"query": "Like decode ( ) , except that it accepts a source bytes and returns the corresponding decoded bytes . With arguments `s`.", "docs": [94]}, {"query": "Return the URL given in the constructor .", "docs": [95]}, {"query": "Insert an entry into the list of warnings filter specifications . With arguments `action`, `category`.", "docs": [96]}, {"query": "Set the `high` and `low` watermarks for write flow control .", "docs": [97, 98, 99]}, {"query": "Reads `size` bytes from the remote server .", "docs": [100]}, {"query": "Add `fallback` as the fallback object for the current translation object .", "docs": [101]}, {"query": "Similar to waitpid ( ) , except a 3-element tuple , containing the child \u2019 s process id , exit status indication , and resource usage information is returned . With arguments `pid`, `options`.", "docs": [102]}, {"query": "An entry in a SymbolTable corresponding to an identifier in the source.", "docs": [103]}, {"query": "Return a new featureless object.", "docs": [104]}, {"query": "Create a TarInfo object from the result of os.stat ( ) or equivalent on an existing file .", "docs": [105]}, {"query": "Read and return a list of lines from the stream . `hint` can be specified to control the number of lines read : no more lines will be read if the total size ( in bytes/characters ) of all lines so far exceeds hint .", "docs": [106]}, {"query": "The `year` , `month` and `day` arguments are required . With arguments `hour`, `second`.", "docs": [107]}, {"query": "Return the value of the Content-Type `header` \u2019 s parameter `param` as a string .", "docs": [108, 109]}, {"query": "Conditionally emits the specified logging `record` , depending on filters which may have been added to the handler .", "docs": [110]}, {"query": "A dictionary mapping XHTML 1.0 entity definitions to their replacement text in ISO Latin-1.", "docs": [111]}, {"query": "Return the total number of seconds contained in the duration .", "docs": [112]}, {"query": "Asynchronous version of socket.getaddrinfo ( ) . With arguments `host`, `port`, `family`.", "docs": [113]}, {"query": "Contains all the information pertinent to the event being logged . The primary information is passed in `msg` and `args` , which are combined using msg % args to create the message field of the record . With arguments `name`, `level`, `pathname`, `lineno`, `exc_info`, `func`, `sinfo`.", "docs": [114]}, {"query": "This bytearray class method returns bytearray object , decoding the given `string` object .", "docs": [115]}, {"query": "Module : email.mime.multipart Optional `_subtype` defaults to mixed , but can be used to specify the subtype of the message . With arguments `**_params`.", "docs": [116]}, {"query": "Open the URL `url` , which can be either a string or a Request object . If `context` is specified , it must be a ssl.SSLContext instance describing the various SSL options .", "docs": [117]}, {"query": "Appends items from the string , interpreting the string as an array of machine values ( as if it had been read from a file using the fromfile ( ) method ) . With arguments `s`.", "docs": [118]}, {"query": "Returns the least int > = self .", "docs": [119]}, {"query": "Return a string decoded from the given bytes . Default `encoding` is 'utf-8 ' . `errors` may be given to set a different error handling scheme .", "docs": [120, 121]}, {"query": "A catch-all class to handle unknown URLs.", "docs": [122]}, {"query": "Set the line thickness to `width` or return it .", "docs": [123, 124, 125]}, {"query": "Return the angle between the line from turtle position to position specified by ( `x` , `y` ) , the vector or the other turtle .", "docs": [126, 127]}, {"query": "Guess the extension for a file based on its MIME `type` , given by type .", "docs": [128]}, {"query": "Return a list with the `n` smallest elements from the dataset defined by `iterable` .", "docs": [129]}, {"query": "Return a list of the words in the string , using `sep` as the delimiter string . If `maxsplit` is given , at most maxsplit splits are done , the rightmost ones .", "docs": [130, 131]}, {"query": "Compile a source `file` to byte-code and write out the byte-code cache file . If `dfile` is specified , it is used as the name of the source file in error messages when instead of file .", "docs": [132]}, {"query": "No modifier is given, so it can appear exactly once, as for A.", "docs": [133]}, {"query": "Select a `mailbox` . If the `readonly` flag is set , modifications to the mailbox are not allowed .", "docs": [134, 135]}, {"query": "A hardware resource list.", "docs": [136]}, {"query": "Add `headers` and payload to `msg` : With arguments `<'str'>`.", "docs": [137, 138]}, {"query": "Creates and returns a new xmlparser object . Expat can optionally do XML namespace processing for you , enabled by providing a value for `namespace_separator` .", "docs": [139]}, {"query": "Constructor arguments should be passed as keyword arguments only . With arguments `netscape`.", "docs": [140]}, {"query": "Return the digest of the bytes passed to the update ( ) method so far .", "docs": [141]}, {"query": "Change the stream position to the given byte `offset` .", "docs": [142]}, {"query": "This method of the Stats class accumulates additional profiling information into the current profiling object . With arguments `*filenames`.", "docs": [143]}, {"query": "A condition variable : an alias for threading.Condition .", "docs": [144]}, {"query": "This class is normally only used if more precise control over profiling is needed than what the cProfile.run ( ) function provides . With arguments `subcalls`.", "docs": [145]}, {"query": "Return the square root of the argument to full precision .", "docs": [146]}, {"query": "Token value used to indicate a non-terminating newline.", "docs": [147]}, {"query": "Returns a new instance of the TimedRotatingFileHandler class . On rotating it also sets the `filename` suffix . Rotating happens based on the product of `when` and `interval` .", "docs": [148, 149, 150]}, {"query": "The minor version number as an integer", "docs": [151]}, {"query": "Open `url` in a new page ( \u201c tab \u201d ) of the browser handled by this controller , if possible , otherwise equivalent to open_new ( ) .", "docs": [152]}, {"query": "This is an alias for the builtin open ( ) function . With arguments `file`, `mode`, `buffering`.", "docs": [153]}, {"query": "Extensible JSON encoder for Python data structures . If `ensure_ascii` is true ( the default ) , the output is guaranteed to have all incoming non-ASCII characters escaped .", "docs": [154]}, {"query": "Return a context object which has the same attributes as the multiprocessing module .", "docs": [155]}, {"query": "Returns a list of all objects tracked by the collector , excluding the list returned .", "docs": [156]}, {"query": "Returns a new instance of the SocketHandler class intended to communicate with a remote machine whose address is given by `host` and `port` .", "docs": [157]}, {"query": "Extensible JSON encoder for Python data structures . If specified , `separators` should be an ( item_separator , key_separator ) tuple .", "docs": [158]}, {"query": "Return true if there are only whitespace characters in the string and there is at least one character , false otherwise .", "docs": [159]}, {"query": "A class which defines a default handler for HTTP error responses; all responses are turned into HTTPError exceptions.", "docs": [160]}, {"query": "Wide char variant of ungetch ( ) , accepting a Unicode value . With arguments `unicode_char`.", "docs": [161]}, {"query": "Acquire a lock , blocking or non-blocking . When invoked with the `block` argument set to True , block until the lock is in an unlocked state ( not owned by any process or thread ) unless the lock is already owned by the current process or thread .", "docs": [162]}, {"query": "Turn turtle right by `angle` units .", "docs": [163, 164]}, {"query": "Acquire a lock , blocking or non-blocking . Use and behaviors of the `timeout` argument are the same as in Lock.acquire ( ) .", "docs": [165]}, {"query": "Return the list of turtles on the screen .", "docs": [166]}, {"query": "Remove history item specified by its position from the history . With arguments `pos`.", "docs": [167]}, {"query": "Simple JSON decoder . `object_hook` , if specified , will be called with the result of every JSON object decoded and its return value will be used in place of the given dict . `parse_int` , if specified , will be called with the string of every JSON int to be decoded .", "docs": [168]}, {"query": "A list of available password hashing algorithms, as crypt.METHOD_* objects.", "docs": [169]}, {"query": "Filter traces of memory blocks by their address space ( domain ) . With arguments `inclusive: bool`, `domain: int`.", "docs": [170]}, {"query": "Return a callable object that fetches item from its operand using the operand \u2019 s __getitem__ ( ) method . With arguments `*items`.", "docs": [171]}, {"query": "Tries to compile `source` , which should be a string of Python code and return a code object if source is valid Python code . In that case , the `filename` attribute of the code object will be filename , which defaults to ' < input > ' . The `symbol` argument determines whether source is compiled as a statement ( 'single ' , the default ) or as an expression ( 'eval ' ) .", "docs": [172]}, {"query": "This constant is meant to be used with the detect_types parameter of the connect() function.", "docs": [173, 174]}, {"query": "Search for all descendants ( direct children , children \u2019 s children , etc . ) With arguments `namespaceURI`, `localName`.", "docs": [175]}, {"query": "An array that represents the abbreviated months of the year in the current locale.", "docs": [176]}, {"query": "This is a Python type object that represents the socket object type.", "docs": [177]}, {"query": "This method is not defined in BaseHandler , but subclasses should define it if they want to catch all URLs with no specific registered handler to open it . With arguments `req`.", "docs": [178]}, {"query": "This function causes the cgitb module to take over the interpreter \u2019 s default handling for exceptions by setting the value of sys.excepthook . If the argument `logdir` is present , the traceback reports are written to files . If the optional argument `format` is `` html '' , the output is formatted as HTML .", "docs": [179]}, {"query": "This function causes the cgitb module to take over the interpreter \u2019 s default handling for exceptions by setting the value of sys.excepthook .", "docs": [180]}, {"query": "Bind `fun` to mouse-click events on this screen .", "docs": [181, 182]}, {"query": "Get up to `size` random bytes .", "docs": [183]}, {"query": "Return a time with the same value , except for those attributes given new values by whichever keyword arguments are specified . With arguments `hour`, `minute`.", "docs": [184]}, {"query": "Connect to the server specified when the object was created .", "docs": [185]}, {"query": "A boolean which is True for server-side sockets and False for client-side sockets.", "docs": [186]}, {"query": "Return true if the string is empty or all characters in the string are ASCII , false otherwise .", "docs": [187]}, {"query": "Flash the screen .", "docs": [188]}, {"query": "Socket operation on non-socket", "docs": [189]}, {"query": "Return a fully qualified domain `name` for name .", "docs": [190, 191]}, {"query": "Represents the C unsigned long datatype.", "docs": [192]}, {"query": "Set ANNOTATIONs for `mailbox` . With arguments `entry`.", "docs": [193]}, {"query": "Create an object which operates like a regular writer but maps dictionaries onto output rows . The `fieldnames` parameter is a sequence of keys that identify the order in which values in the dictionary passed to the writerow ( ) method are written to file f. The optional `restval` parameter specifies the value to be written if the dictionary is missing a key in fieldnames . If the dictionary passed to the writerow ( ) method contains a key not found in fieldnames , the optional `extrasaction` parameter indicates what action to take . With arguments `f`, `*args`, `**kwds`.", "docs": [194, 195]}, {"query": "Return a list containing a ZipInfo object for each member of the archive .", "docs": [196]}, {"query": "Log in on an SMTP server that requires authentication . The arguments are the username and the `password` to authenticate with . With arguments `user`.", "docs": [197]}, {"query": "Executes an SQL command against all parameter sequences or mappings found in the sequence `seq_of_parameters` . With arguments `sql`.", "docs": [198]}, {"query": "True if the tracemalloc module is tracing Python memory allocations , False otherwise .", "docs": [199]}, {"query": "Returns a new tuple subclass named `typename` . Instances of the subclass also have a helpful docstring ( with typename and `field_names` ) and a helpful __repr__ ( ) method which lists the tuple contents in a name=value format . `defaults` can be None or an iterable of default values .", "docs": [200]}, {"query": "Return the proleptic Gregorian ordinal of the date , where January 1 of year 1 has ordinal 1 .", "docs": [201]}, {"query": "Return the length ( the number of items ) of an object . With arguments `s`.", "docs": [202]}, {"query": "The \u201cctime\u201d as reported by the operating system.", "docs": [203]}, {"query": "All arguments are optional . With arguments `hour`, `microsecond`.", "docs": [204]}, {"query": "Sets the result of the work associated with the Future to the Exception `exception` .", "docs": [205]}, {"query": "Open the FTP file indicated by `req` .", "docs": [206]}, {"query": "Read `n` items ( as machine values ) from the file object `f` and append them to the end of the array .", "docs": [207]}, {"query": "Return a tuple ( address , length ) giving the current memory address and the length in elements of the buffer used to hold array \u2019 s contents .", "docs": [208]}, {"query": "A constant that is likely larger than the underlying OS socket buffer size, to make writes blocking.", "docs": [209]}, {"query": "Special value that can be used as the stdin, stdout or stderr argument to process creation functions.", "docs": [210]}, {"query": "A subclass of Shelf which accepts a `filename` instead of a dict-like object . The optional `flag` parameter has the same interpretation as for the open ( ) function .", "docs": [211]}, {"query": "Files which are identical in both a and b, using the class\u2019s file comparison operator.", "docs": [212]}, {"query": "Check the validity of an `address` on this server using SMTP VRFY .", "docs": [213]}, {"query": "Write the XML-RPC base 64 encoding of this binary item to the `out` stream object .", "docs": [214]}, {"query": "Replace a header . Replace the first header found in the message that matches `_name` , retaining header order and field name case of the original header . With arguments `_value`.", "docs": [215]}, {"query": "This is a convenience method for calling sendmail ( ) with the message represented by an email.message.Message object . The arguments have the same meaning as for sendmail ( ) , except that `msg` is a Message object . With arguments `rcpt_options`.", "docs": [216]}, {"query": "Contains the Python system version, in a form usable by the version_string method and the server_version class variable.", "docs": [217]}, {"query": "A Semaphore object .", "docs": [218]}, {"query": "Elements are subtracted from an iterable or from another mapping ( or counter ) .", "docs": [219]}, {"query": "User id of the owner.", "docs": [220]}, {"query": "Lists may be constructed in several ways :", "docs": [221]}, {"query": "A class which postpones the execution of the `loader` of a module until the module has an attribute accessed .", "docs": [222]}, {"query": "The smallest possible difference between non-equal date objects, timedelta(days=1).", "docs": [223]}, {"query": "This method checks if there is a breakpoint in the filename and line belonging to `frame` or , at least , in the current function .", "docs": [224]}, {"query": "Add a new child node to this node at the end of the list of children , returning `newChild` .", "docs": [225]}, {"query": "No such device", "docs": [226]}, {"query": "Declares that `function` should be used as a \u201c reduction \u201d function for objects of `type` type .", "docs": [227]}, {"query": "A SQLite database connection has the following attributes and methods:", "docs": [228]}, {"query": "The new process has a new console, instead of inheriting its parent\u2019s console (the default).", "docs": [229]}, {"query": "Establish a network connection and return a pair of ( reader , writer ) objects . With arguments `port`.", "docs": [230]}, {"query": "Plus corresponds to the unary prefix plus operator in Python . With arguments `x`.", "docs": [231]}, {"query": "This read-only attribute provides the column names of the last query.", "docs": [232]}, {"query": "Determine whether `code` is in tableC.9 ( Tagging characters ) .", "docs": [233]}, {"query": "Parse a query string given as a string argument ( data of type application/x-www-form-urlencoded ) . The optional `encoding` and errors parameters specify how to decode percent-encoded sequences into Unicode characters , as accepted by the bytes.decode ( ) method . With arguments `qs`.", "docs": [234]}, {"query": "Stops the listener .", "docs": [235]}, {"query": "A helper class that has ABCMeta as its metaclass.", "docs": [236]}, {"query": "Add a `callback` to be run when the Future is done .", "docs": [237]}, {"query": "A convenience wrapper for warnings.catch_warnings ( ) that makes it easier to test that a warning was correctly raised . If one or more filters are provided , or if the optional keyword argument `quiet` is False , it checks to make sure the warnings are as expected : each specified filter must match at least one of the warnings raised by the enclosed code or the test fails , and if any warnings are raised that do not match any of the specified filters the test fails . With arguments `*filters`.", "docs": [238]}, {"query": "Connect to the given `host` and `port` .", "docs": [239, 240, 241, 242]}, {"query": "MagicMock is a subclass of Mock with default implementations of most of the magic methods . With arguments `*args`, `**kw`.", "docs": [243]}, {"query": "This defaults to ['/cgi-bin', '/htbin'] and describes directories to treat as containing CGI scripts.", "docs": [244]}, {"query": "A single interactive example , consisting of a Python statement and its expected output . With arguments `source`, `want`.", "docs": [245]}, {"query": "A wrapper for a bound socket or Windows named pipe which is \u2018 listening \u2019 for connections . `address` is the address to be used by the bound socket or named pipe of the listener object . `family` is the type of socket ( or named pipe ) to use . If the listener object uses a socket then `backlog` ( 1 by default ) is passed to the listen ( ) method of the socket once it has been bound .", "docs": [246]}, {"query": "logical_invert ( ) is a logical operation .", "docs": [247]}, {"query": "Schedule an event for `delay` more time units . With arguments `priority`, `action`, `argument`.", "docs": [248]}, {"query": "Update the `is_authenticated` flag for the given `uri` or list of URIs . With arguments `self`.", "docs": [249, 250]}, {"query": "Disassemble the `x` object . The maximal `depth` of recursion is limited by depth unless it is None .", "docs": [251, 252]}, {"query": "The mode as given in the constructor.", "docs": [253]}, {"query": "Return the bytes of the file `name` in the archive . `pwd` is the password used for encrypted files and , if specified , it will override the default password set with setpassword ( ) .", "docs": [254]}, {"query": "Decompresses the bytes in `data` , returning a bytes object containing the uncompressed data . The `wbits` parameter depends on the format of data , and is discussed further below . If `bufsize` is given , it is used as the initial size of the output buffer .", "docs": [255]}, {"query": "Specialized version of sendmsg ( ) for AF_ALG socket . With arguments `msg`, `op`, `iv`, `assoclen`.", "docs": [256]}, {"query": "Register an archiver for the format `name` . `function` is the callable that will be used to unpack archives .", "docs": [257]}, {"query": "Return a bytes object which is a printable representation of the character `ch` .", "docs": [258]}, {"query": "Others have write permission.", "docs": [259]}, {"query": "Simulate the effect of a signal.SIGINT signal arriving in the main thread .", "docs": [260]}, {"query": "Move a PEP 3147/488 pyc file to its legacy pyc location and return the file system path to the legacy pyc file . The `source` value is the file system path to the source file .", "docs": [261]}, {"query": "Run the examples in `test` ( a DocTest object ) , and display the results using the writer function `out` .", "docs": [262, 263]}, {"query": "Return a 2-tuple ; the first element is a string containing the command line to be executed ( which can be passed to os.system ( ) ) , and the second element is the mailcap entry for a given MIME type . `plist` can be a list containing named parameters ; the default value is simply an empty list . With arguments `caps`, `MIMEtype`.", "docs": [264]}, {"query": "TIPC related constants, matching the ones exported by the C socket API.", "docs": [265]}, {"query": "Return the number of weak references and proxies which refer to `object` .", "docs": [266]}, {"query": "Return a list with the `n` largest elements from the dataset defined by `iterable` .", "docs": [267]}, {"query": "A Balloon that pops up over a widget to provide help.", "docs": [268]}, {"query": "Comment for the individual archive member as a bytes object.", "docs": [269]}, {"query": "Create a new theme . It is an error if `themename` already exists . If `parent` is specified , the new theme will inherit styles , elements and layouts from the parent theme . If `settings` are present they are expected to have the same syntax used for theme_settings ( ) .", "docs": [270]}, {"query": "Similar to push ( ) but expects either an asynchronous context manager or a coroutine function . With arguments `exit`.", "docs": [271]}, {"query": "Return the list of objects that directly refer to any of objs . With arguments `*objs`.", "docs": [272]}, {"query": "Return a bytes object of characters , extracted from the window starting at the current cursor position , or at `y` , `x` if specified .", "docs": [273]}, {"query": "User defined value.", "docs": [274]}, {"query": "A decorator for importlib.abc.Loader.load_module() to set the __loader__ attribute on the returned module.", "docs": [275]}, {"query": "Return true if all cased characters 4 in the string are uppercase and there is at least one cased character , false otherwise .", "docs": [276]}, {"query": "Return a new NNTP object , representing a connection to the NNTP server running on `host` host , listening at `port` port .", "docs": [277, 278]}, {"query": "An abstract method that executes the `module` in its own namespace when a module is imported or reloaded .", "docs": [279]}, {"query": "Construct a PrettyPrinter instance . The amount of indentation added for each recursive level is specified by `indent` ; the default is one . If `compact` is false ( the default ) each item of a long sequence will be formatted on a separate line .", "docs": [280]}, {"query": "Optional abstract method which writes the specified bytes to a file `path` . With arguments `data`.", "docs": [281]}, {"query": "Format the shell environment in HTML .", "docs": [282]}, {"query": "The type of generator-iterator objects, created by generator functions.", "docs": [283]}, {"query": "The calculated size of the struct (and hence of the bytes object produced by the pack() method) corresponding to format.", "docs": [284]}, {"query": "Get the memory usage in bytes of the tracemalloc module used to store traces of memory blocks .", "docs": [285]}, {"query": "`a` = iadd ( a , `b` ) is equivalent to a += b .", "docs": [286, 287]}, {"query": "Get the size of the terminal window . With arguments `lines)`.", "docs": [288]}, {"query": "The character used to draw separator lines under the help-message headers.", "docs": [289]}, {"query": "Byte-compile all the .py files found along sys.path . If `skip_curdir` is true ( the default ) , the current directory is not included in the search . Note that unlike the other compile functions , `maxlevels` defaults to 0 .", "docs": [290]}, {"query": "Base class for opening and reading URLs . With arguments `**x509`.", "docs": [291]}, {"query": "Return a string which is the concatenation of the strings in `iterable` .", "docs": [292]}, {"query": "Return True if this entry is a file or a symbolic link pointing to a file ; return False if the entry is or points to a directory or other non-file entry , or if it doesn \u2019 t exist anymore .", "docs": [293]}, {"query": "Creates a new context . The `Emin` and `Emax` fields are integers specifying the outer limits allowable for exponents .", "docs": [294]}, {"query": "Get a description for a single `group` group .", "docs": [295]}, {"query": "Token used to determine end of file.", "docs": [296]}, {"query": "Upgrade an existing transport-based connection to TLS . Return a new `transport` instance , that the `protocol` must start using immediately after the await . With arguments `sslcontext`, `server_side`.", "docs": [297]}, {"query": "Returns the input data that generated the current event as a string .", "docs": [298]}, {"query": "Return an iterator which yields the same values as glob ( ) without actually storing them all simultaneously . With arguments `pathname`.", "docs": [299]}, {"query": "All arguments are optional and default to 0 . Only `days` , `seconds` and `microseconds` are stored internally .", "docs": [300, 301, 302, 303, 304]}, {"query": "Decode the Ascii85 encoded bytes-like object or ASCII string `b` and return the decoded bytes . `adobe` controls whether the input sequence is in Adobe Ascii85 format ( i.e .", "docs": [305]}, {"query": "Open a mixer `device` and return an OSS mixer device object .", "docs": [306]}, {"query": "Translate an Internet service name and protocol name to a port number for that service . With arguments `servicename`.", "docs": [307]}, {"query": "If the debugger should stop on this function return , invoke the user_return ( ) method ( which should be overridden in subclasses ) . With arguments `frame`, `arg`.", "docs": [308]}, {"query": "Return the message \u2019 s main content type .", "docs": [309]}, {"query": "Get the profiler function as set by setprofile ( ) .", "docs": [310]}, {"query": "Resets the pack buffer to the empty string .", "docs": [311]}, {"query": "Another Modular Crypt Format method with 22 character salt and 31 character hash based on the Blowfish cipher.", "docs": [312]}, {"query": "Convert a `value` to a \u201c formatted \u201d representation , as controlled by `format_spec` .", "docs": [313, 314]}, {"query": "The LMTP protocol , which is very similar to ESMTP , is heavily based on the standard SMTP client . It \u2019 s common to use Unix sockets for LMTP , so our connect ( ) method must support that as well as a regular `host` : `port` server .", "docs": [315, 316, 317]}, {"query": "A thread-safe variant of call_soon ( ) . With arguments `callback`, `*args`, `context`.", "docs": [318]}, {"query": "Connect to a `host` on a given `port` .", "docs": [319, 320, 321, 322]}, {"query": "Add `headers` and payload to `msg` : If `charset` is provided ( which is valid only for str ) , encode the string to bytes using the specified character set . With arguments `<'str'>`.", "docs": [323]}, {"query": "Split the string `s` using shell-like syntax . If `comments` is False ( the default ) , the parsing of comments in the given string will be disabled ( setting the commenters attribute of the shlex instance to the empty string ) .", "docs": [324]}, {"query": "Translate a host name to IPv4 address format . With arguments `hostname`.", "docs": [325]}, {"query": "Hides the window.", "docs": [326]}, {"query": "Return True if resize_term ( ) would modify the window structure , False otherwise . With arguments `nlines`, `ncols`.", "docs": [327]}, {"query": "Save cookies to a file . `filename` is the name of file in which to save cookies . `ignore_discard` : save even cookies set to be discarded . `ignore_expires` : save even cookies that have expired", "docs": [328]}, {"query": "Add the file `name` to the archive . If given , `arcname` specifies an alternative name for the file in the archive . This can be avoided by setting `recursive` to False .", "docs": [329]}, {"query": "The `offset` argument must be specified as a timedelta object representing the difference between the local time and UTC .", "docs": [330]}, {"query": "A generic version of `dict` . With arguments `MutableMappingKT`, `VT`.", "docs": [331]}, {"query": "Clear all cookies and reload cookies from a saved file . With arguments `filename`.", "docs": [332]}, {"query": "This attribute is a flag which controls the interpretation of blanks in the window.", "docs": [333]}, {"query": "This is identical to the creation of a normal socket , and will use the same options for creation . With arguments `family`.", "docs": [334]}, {"query": "Return the phase of `x` ( also known as the argument of x ) , as a float .", "docs": [335]}, {"query": "Write `value` to a plist file . When `sort_keys` is true ( the default ) the keys for dictionaries will be written to the plist in sorted order , otherwise they will be written in the iteration order of the dictionary . When `skipkeys` is false ( the default ) the function raises TypeError when a key of a dictionary is not a string , otherwise such keys are skipped . With arguments `fp`.", "docs": [336]}, {"query": "Return the number of occurrences of `x` in the array .", "docs": [337]}, {"query": "This function takes a single argument that can be passed to the exec ( ) function , and an optional file name . With arguments `command`, `filename`.", "docs": [338]}, {"query": "Print the textual representation of the message object structure rooted at `msg` to the output file specified when the Generator instance was created . If `unixfrom` is True , print the envelope header delimiter used by the Unix mailbox format ( see mailbox ) before the first of the RFC 5322 headers of the root message object .", "docs": [339]}, {"query": "Return a 2-tuple ; the first element is a string containing the command line to be executed ( which can be passed to os.system ( ) ) , and the second element is the mailcap entry for a given MIME type . `key` is the name of the field desired , which represents the type of activity to be performed ; the default value is \u2018 view \u2019 , since in the most common case you simply want to view the body of the MIME-typed data . `plist` can be a list containing named parameters ; the default value is simply an empty list . With arguments `caps`, `MIMEtype`.", "docs": [340]}, {"query": "Called when the other end signals it won \u2019 t send any more data ( for example by calling transport.write_eof ( ) , if the other end also uses asyncio ) .", "docs": [341]}, {"query": "A class method which returns a closure for use on sys.path_hooks . With arguments `*loader_details`.", "docs": [342]}, {"query": "This class can be used to generate plain text calendars . With arguments `firstweekday`.", "docs": [343]}, {"query": "Initializes instance of HtmlDiff . `linejunk` and `charjunk` are optional keyword arguments passed into ndiff ( ) ( used by HtmlDiff to generate the side by side HTML differences ) .", "docs": [344]}, {"query": "An asynchronous context manager, similar to ExitStack, that supports combining both synchronous and asynchronous context managers, as well as having coroutines for cleanup logic.", "docs": [345]}, {"query": "Decompress the `data` , returning a bytes object containing the uncompressed data .", "docs": [346]}, {"query": "Test examples associated with object `f` ; for example , f may be a string , a module , a function , or a class object . A shallow copy of dictionary argument `globs` is used for the execution context . If optional argument `verbose` is true , output is generated even if there are no failures .", "docs": [347]}, {"query": "All arguments except `filename` are optional , and should be specified in keyword form . Optional argument `optionflags` ( default value 0 ) takes the bitwise OR of option flags .", "docs": [348]}, {"query": "Construct a Bytecode instance from the given traceback , setting current_offset to the instruction responsible for the exception . With arguments `tb`.", "docs": [349]}, {"query": "Return a pair ( response , date ) .", "docs": [350]}, {"query": "Start debugging with a Bdb instance from caller \u2019 s frame .", "docs": [351]}, {"query": "Clone this node . Setting `deep` means to clone all child nodes as well .", "docs": [352]}, {"query": "Return the decoded contents of the pointed-to file as a string :", "docs": [353]}, {"query": "Route attribute access on a class to __getattr__ . With arguments `fset`.", "docs": [354]}, {"query": "Function not implemented", "docs": [355]}, {"query": "An SMTP_SSL instance behaves exactly the same as instances of SMTP .", "docs": [356]}, {"query": "Parses an XML section into an element tree incrementally , and reports what \u2019 s going on to the user . `source` is a filename or file object containing XML data . `parser` is an optional parser instance .", "docs": [357]}, {"query": "The path to the source file.", "docs": [358]}, {"query": "Print objects to the text stream `file` , separated by `sep` and followed by `end` . With arguments `*objects`.", "docs": [359, 360, 361, 362, 363, 364, 365]}, {"query": "The default port for the HTTP protocol (always 80).", "docs": [366]}, {"query": "An idealized time, independent of any particular day, assuming that every day has exactly 24*60*60 seconds (there is no notion of \u201cleap seconds\u201d here).", "docs": [367]}, {"query": "Return the value ( in fractional seconds ) of a monotonic clock , i.e .", "docs": [368]}, {"query": "Called when the buffer was updated with the received data . `nbytes` is the total number of bytes that were written to the buffer .", "docs": [369]}, {"query": "This function operates exactly as TemporaryFile ( ) does , except that the file is guaranteed to have a visible name in the file system ( on Unix , the directory entry is not unlinked ) . With arguments `dir`.", "docs": [370]}, {"query": "Try to find a library and return a pathname . `name` is the library name without any prefix like lib , suffix like .so , .dylib or version number ( this is the form used for the posix linker option -l ) .", "docs": [371]}, {"query": "A subclass of HTTPConnection that uses SSL for communication with secure servers . With arguments `host`, `blocksize`.", "docs": [372]}, {"query": "Partial support of the Windows STARTUPINFO structure is used for Popen creation . With arguments `hStdOutput`.", "docs": [373]}, {"query": "Return list of triples describing non-overlapping matching subsequences .", "docs": [374]}, {"query": "Context manager to wait until all threads created in the with statement exit . With arguments `timeout`.", "docs": [375]}, {"query": "Applies the logical operation or between each operand \u2019 s digits . With arguments `x`, `y`.", "docs": [376]}, {"query": "Set the attribute `key` on the element to `value` .", "docs": [377]}, {"query": "The logical parent of the path:", "docs": [378]}, {"query": "Return the filename prefix used to create temporary files .", "docs": [379]}, {"query": "Convert a mapping object or a sequence of two-element tuples , which may contain str or bytes objects , to a percent-encoded ASCII text string . When a sequence of two-element tuples is used as the `query` argument , the first element of each tuple is a key and the second is a value . The value element in itself can be a sequence and in that case , if the optional parameter `doseq` is evaluates to True , individual key=value pairs separated by ' & ' are generated for each element of the value sequence for the key . For maximum control of what is quoted , use quote and specify a value for `safe` .", "docs": [380]}, {"query": "Display the syntax error that just occurred . If `filename` is given , it is stuffed into the exception instead of the default filename provided by Python \u2019 s parser , because it always uses ' < string > ' when reading from a string .", "docs": [381]}, {"query": "Same as date.strftime ( ) . This makes it possible to specify a `format` string for a date object in formatted string literals and when using str.format ( ) .", "docs": [382]}, {"query": "The earliest representable datetime, datetime(MINYEAR, 1, 1, tzinfo=None).", "docs": [383]}, {"query": "Return true if the OptionParser has an option with option string `opt_str` ( e.g. , -q or -- verbose ) .", "docs": [384]}, {"query": "Return a TarFile object for the pathname `name` . If `fileobj` is specified , it is used as an alternative to a file object opened in binary mode for name . With arguments `**kwargs`.", "docs": [385]}, {"query": "Create a new SMTPChannel object which manages the communication between the `server` and a single SMTP client . `conn` and `addr` are as per the instance variables described below . `decode_data` and enable_SMTPUTF8 can not be set to True at the same time .", "docs": [386]}, {"query": "logical_and ( ) is a logical operation which takes two logical operands ( see Logical operands ) . With arguments `other`.", "docs": [387]}, {"query": "The main configuration parser . When `inline_comment_prefixes` is given , it will be used as the set of substrings that prefix comments in non-empty lines . With arguments `':')`, `';')`.", "docs": [388]}, {"query": "This is similar to urlparse ( ) , but does not split the params from the URL . With arguments `urlstring`, `scheme`.", "docs": [389]}, {"query": "In [0, 1].", "docs": [390, 391]}, {"query": "Set the tty `attributes` for file descriptor `fd` from the attributes , which is a list like the one returned by tcgetattr ( ) . The `when` argument determines when the attributes are changed : TCSANOW to change immediately , TCSADRAIN to change after transmitting all queued output , or TCSAFLUSH to change after transmitting all queued output and discarding all queued input .", "docs": [392]}, {"query": "Encode a message header into an RFC-compliant format , possibly wrapping long lines and encapsulating non-ASCII parts in base64 or quoted-printable encodings . `maxlinelen` , if given , overrides the instance \u2019 s value for the maximum line length . With arguments `\\t'`.", "docs": [393]}, {"query": "Set the entire message object \u2019 s `payload` to payload . Optional `charset` sets the message \u2019 s default character set ; see set_charset ( ) for details .", "docs": [394]}, {"query": "Returns a combined list of strings representing all file suffixes for modules recognized by the standard import machinery .", "docs": [395]}, {"query": "Formats a number `val` according to the current LC_MONETARY settings . If `international` is true ( which is not the default ) , the international currency symbol is used .", "docs": [396]}, {"query": "Line number on which the error was detected.", "docs": [397]}, {"query": "The EnvBuilder class accepts the following keyword arguments on instantiation : With arguments `system_site_packages`, `clear`.", "docs": [398]}, {"query": "Encode the bytes-like object `b` using Ascii85 and return the encoded bytes . `foldspaces` is an optional flag that uses the special short sequence \u2018 y \u2019 instead of 4 consecutive spaces ( ASCII 0x20 ) as supported by \u2018 btoa \u2019 . `wrapcol` controls whether the output should have newline ( b'\\n ' ) characters added to it .", "docs": [399]}, {"query": "Generic version of `list` .", "docs": [400]}, {"query": "Return the smallest item in an `iterable` or the smallest of two or more arguments . The `key` argument specifies a one-argument ordering function like that used for list.sort ( ) . The `default` argument specifies an object to return if the provided iterable is empty .", "docs": [401]}, {"query": "Method called to prepare the test fixture .", "docs": [402]}, {"query": "This function implements the standard .mo file search algorithm . It takes a `domain` , identical to what textdomain ( ) takes . Optional `localedir` is as in bindtextdomain ( ) .", "docs": [403]}, {"query": "Print the textual representation of the message object structure rooted at `msg` to the output file specified when the Generator instance was created . If `linesep` is not None , use it as the separator character between all the lines of the flattened message .", "docs": [404]}, {"query": "This function creates a new pointer instance , pointing to `obj` .", "docs": [405]}, {"query": "Extract a `member` from the archive as a file object .", "docs": [406]}, {"query": "The .pyc file includes the timestamp and size of the source file, which Python will compare against the metadata of the source file at runtime to determine if the .pyc file needs to be regenerated.", "docs": [407]}, {"query": "Copy the permission bits from `src` to `dst` .", "docs": [408]}, {"query": "Retrieve the next item from the `iterator` by calling its __next__ ( ) method . If `default` is given , it is returned if the iterator is exhausted , otherwise StopIteration is raised .", "docs": [409]}, {"query": "Return a message object structure tree from an open binary file object . This is equivalent to BytesParser ( ) .parse ( `fp` ) .", "docs": [410]}, {"query": "Update a `wrapper` function to look like the `wrapped` function .", "docs": [411]}, {"query": "Pass the barrier . If a `timeout` is provided , it is used in preference to any that was supplied to the class constructor .", "docs": [412]}, {"query": "Load a plist from a bytes object . With arguments `data`, `fmt`.", "docs": [413]}, {"query": "An Executor subclass that executes calls asynchronously using a pool of at most `max_workers` processes . `mp_context` can be a multiprocessing context or None .", "docs": [414, 415]}]