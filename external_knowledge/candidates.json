{
    "snippets": [
        "xmlparser.AttlistDeclHandler(elname, attname, type, default, required)",
        "ZipFile.comment",
        "xmlparser.EndDoctypeDeclHandler()",
        "ArgumentParser.add_argument(name or flags..., action, nargs, const, default)",
        "calendar.LocaleTextCalendar(firstweekday=0, locale=None)",
        "importlib.util.cache_from_source(path, debug_override=None, optimization=None)",
        "email.contentmanager.set_content(msg, <'bytes'>, maintype, subtype, params=None)",
        "sys.exc_info()",
        "base_server.server_close()",
        "context_var.name",
        "gc.get_count()",
        "NNTP.head(file=None)",
        "getopt.error",
        "collections.abc.Coroutine",
        "configparser.RawConfigParser(':'), ';'), interpolation, comment_prefixes=('#')",
        "dataclasses.asdict(instance, dict_factory=dict)",
        "dataclasses.asdict(instance)",
        "i_pv4_network.subnets(prefixlen_diff=1)",
        "cgi.parse(environ=os.environ)",
        "widget.identify_row(y)",
        "os.removedirs(name)",
        "bytearray.index(sub, start, end)",
        "logging.handlers.WatchedFileHandler(filename, mode='a', delay=False)",
        "os.fwalk()",
        "window.bkgdset(ch, attr)",
        "trace.size",
        "connection.backup(target, pages=0)",
        "base_http_request_handler.log_date_time_string()",
        "turtle.bgpic(picname=None)",
        "compileall.compile_dir(dir, ddir=None)",
        "asyncio.BaseProtocol",
        "ftplib.FTP_TLS(host='')",
        "os.path.getmtime(path)",
        "smtp_handler.getSubject(record)",
        "socket.inet_aton(ip_string)",
        "date.fromtimestamp(timestamp)",
        "style.theme_names()",
        "dis.Bytecode(x, first_line=None)",
        "asyncio.wait_for(aw, timeout)",
        "email.mime.application.MIMEApplication(_data, **_params, _subtype='octet-stream')",
        "bdb.dispatch_line(frame)",
        "modulefinder.ModuleFinder(excludes=)",
        "traceback.print_stack()",
        "traceback.print_stack(limit=None)",
        "asyncore.dispatcher_with_send",
        "xmlparser.NotationDeclHandler(notationName, base, systemId, publicId)",
        "connection.rollback()",
        "xml.sax.saxutils.XMLGenerator(out=None, encoding='iso-8859-1')",
        "i_pv4_interface.network",
        "token.ISNONTERMINAL(x)",
        "Match.group()",
        "time.asctime(t)",
        "codecs.backslashreplace_errors(exception)",
        "decimal.compare(other, context=None)",
        "uuid.uuid1()",
        "importlib.resources.read_binary(package, resource)",
        "wave.openfp(file, mode)",
        "sunau.openfp(file, mode)",
        "SystemError",
        "os.name",
        "uuid.uuid1(clock_seq=None)",
        "time.__str__()",
        "__import__(name, locals=None)",
        "__import__(name, globals=None, locals=None)",
        "__import__(name, globals=None)",
        "__import__(name)",
        "window.syncup()",
        "auto.object",
        "binascii.b2a_qp(data, istext=True, header=False)",
        "float.hex()",
        "list(d)",
        "os._exit(n)",
        "ssl.SSLCertVerificationError",
        "os.SCHED_SPORADIC",
        "AbstractDigestAuthHandler.http_error_auth_reqed(authreq, host, req, headers)",
        "controller.open(url, autoraise=True)",
        "netrc.authenticators(host)",
        "ipaddress.IPv4Address(address)",
        "Node.toxml()",
        "loop.run_until_complete(future)",
        "difflib.SequenceMatcher(a='', b='')",
        "difflib.SequenceMatcher(b='')",
        "difflib.SequenceMatcher(isjunk=None, b='')",
        "errno.EREMOTE",
        "config_parser.items(raw=False)",
        "bdb.user_line(frame)",
        "SimpleQueue.put_nowait(item)",
        "subprocess.CalledProcessError",
        "test.support.check_free_after_iterating(test, iter, cls)",
        "Path.open(mode='r', buffering=-1)",
        "dataclasses.field(hash=None)",
        "Path.stat()",
        "email_policy.refold_source",
        "os.GRND_NONBLOCK",
        "quopri.decodestring(s)",
        "Request.get_full_url()",
        "warnings.filterwarnings(action, category=Warning)",
        "WriteTransport.set_write_buffer_limits(low=None)",
        "WriteTransport.set_write_buffer_limits(high=None)",
        "WriteTransport.set_write_buffer_limits(high=None, low=None)",
        "IMAP4.read(size)",
        "null_translations.add_fallback(fallback)",
        "os.wait4(pid, options)",
        "symtable.Symbol",
        "object",
        "TarFile.gettarinfo()",
        "io_base.readlines(hint=-1)",
        "datetime.datetime(year, month, day, hour=0, second=0)",
        "message.get_param(param)",
        "message.get_param(param, header='content-type')",
        "queue_listener.handle(record)",
        "html.entities.entitydefs",
        "timedelta.total_seconds()",
        "loop.getaddrinfo(host, port, family=0)",
        "logging.LogRecord(name, level, pathname, lineno, msg, args, exc_info, func=None, sinfo=None)",
        "bytearray.fromhex(string)",
        "email.mime.multipart.MIMEMultipart(**_params, _subtype='mixed')",
        "urllib.request.urlopen(url, context=None)",
        "array.frombytes(s)",
        "fraction.__ceil__()",
        "bytearray.decode(encoding=\"utf-8\", errors=\"strict\")",
        "bytes.decode(encoding=\"utf-8\", errors=\"strict\")",
        "urllib.request.UnknownHandler",
        "turtle.pensize()",
        "turtle.width()",
        "turtle.pensize(width=None)",
        "turtle.towards(x, y=None)",
        "turtle.towards(x)",
        "mimetypes.guess_extension(type)",
        "heapq.nsmallest(n, iterable)",
        "str.rsplit(sep=None, maxsplit=-1)",
        "str.rsplit(maxsplit=-1)",
        "py_compile.compile(file, dfile=None)",
        "xml.parsers.expat.model.XML_CQUANT_NONE",
        "IMAP4.select(readonly=False)",
        "IMAP4.select(mailbox='INBOX', readonly=False)",
        "winreg.REG_RESOURCE_REQUIREMENTS_LIST",
        "email.contentmanager.set_content(msg, <'str'>)",
        "email.contentmanager.set_content(msg, <'str'>, headers=None)",
        "xml.parsers.expat.ParserCreate(namespace_separator=None)",
        "http.cookiejar.DefaultCookiePolicy(netscape=True)",
        "HMAC.digest()",
        "io_base.seek(offset)",
        "stats.add(*filenames)",
        "multiprocessing.Condition()",
        "profile.Profile(subcalls=True)",
        "decimal.sqrt()",
        "token.NL",
        "logging.handlers.TimedRotatingFileHandler(filename, when='h', interval=1)",
        "logging.handlers.TimedRotatingFileHandler(filename, when='h')",
        "logging.handlers.TimedRotatingFileHandler(filename, interval=1)",
        "mime_version_header.minor",
        "controller.open_new_tab(url)",
        "io.open(file, mode='r', buffering=-1)",
        "json.JSONEncoder(ensure_ascii=True)",
        "multiprocessing.get_context()",
        "gc.get_objects()",
        "logging.handlers.SocketHandler(host, port)",
        "json.JSONEncoder(separators=None)",
        "str.isspace()",
        "urllib.request.HTTPDefaultErrorHandler",
        "msvcrt.ungetwch(unicode_char)",
        "r_lock.acquire(block=True)",
        "turtle.right(angle)",
        "turtle.rt(angle)",
        "r_lock.acquire(timeout=None)",
        "turtle.turtles()",
        "readline.remove_history_item(pos)",
        "json.JSONDecoder(object_hook=None, parse_int=None)",
        "crypt.methods",
        "tracemalloc.DomainFilter(inclusive: bool, domain: int)",
        "operator.itemgetter(*items)",
        "codeop.compile_command(source, filename=\"<input>\", symbol=\"single\")",
        "sqlite3.PARSE_DECLTYPES",
        "sqlite3.PARSE_COLNAMES",
        "Document.getElementsByTagNameNS(namespaceURI, localName)",
        "calendar.month_abbr",
        "socket.SocketType",
        "BaseHandler.unknown_open(req)",
        "cgitb.enable(logdir=None, format=\"html\")",
        "cgitb.enable()",
        "turtle.onclick(fun)",
        "turtle.onscreenclick(fun)",
        "os.getrandom(size)",
        "time.replace(hour=self.hour, minute=self.minute)",
        "HTTPConnection.connect()",
        "SSLSocket.server_side",
        "str.isascii()",
        "curses.flash()",
        "errno.ENOTSOCK",
        "socket.getfqdn(name)",
        "socket.getfqdn()",
        "ctypes.c_ulong",
        "IMAP4.setannotation(mailbox, entry)",
        "csv.DictWriter(f, fieldnames, *args, **kwds, restval='', extrasaction='raise')",
        "csv.DictWriter(f, fieldnames, *args, **kwds, extrasaction='raise')",
        "ZipFile.infolist()",
        "SMTP.login(user, password)",
        "cursor.executemany(sql, seq_of_parameters)",
        "tracemalloc.is_tracing()",
        "collections.namedtuple(typename, field_names, defaults=None)",
        "date.toordinal()",
        "len(s)",
        "stat.ST_CTIME",
        "datetime.time(hour=0, microsecond=0)",
        "future.set_exception(exception)",
        "FTPHandler.ftp_open(req)",
        "array.fromfile(f, n)",
        "array.buffer_info()",
        "test.support.SOCK_MAX_SIZE",
        "asyncio.subprocess.DEVNULL",
        "shelve.DbfilenameShelf(filename, flag='c')",
        "dircmp.same_files",
        "SMTP.verify(address)",
        "binary.encode(out)",
        "email_message.replace_header(_name, _value)",
        "SMTP.send_message(msg, rcpt_options=())",
        "base_http_request_handler.sys_version",
        "asyncio.Semaphore()",
        "counter.subtract()",
        "stat.ST_UID",
        "list()",
        "importlib.util.LazyLoader(loader)",
        "date.resolution",
        "bdb.break_here(frame)",
        "Node.appendChild(newChild)",
        "errno.ENODEV",
        "copyreg.pickle(type, function)",
        "sqlite3.Connection",
        "subprocess.CREATE_NEW_CONSOLE",
        "asyncio.open_connection(port=None)",
        "context.plus(x)",
        "cursor.description",
        "stringprep.in_table_c9(code)",
        "urllib.parse.parse_qs(qs, encoding='utf-8')",
        "queue_listener.stop()",
        "abc.ABC",
        "future.add_done_callback(callback)",
        "test.support.check_warnings(*filters, quiet=True)",
        "FTP.connect(port=0)",
        "FTP.connect(host='', port=0)",
        "FTP.connect(host='')",
        "FTP.connect()",
        "unittest.mock.MagicMock(*args, **kw)",
        "cgihttp_request_handler.cgi_directories",
        "doctest.Example(source, want)",
        "multiprocessing.connection.Listener(address, family, backlog)",
        "decimal.logical_invert()",
        "scheduler.enter(delay, priority, action, argument=())",
        "HTTPPasswordMgrWithPriorAuth.update_authenticated(self, uri)",
        "HTTPPasswordMgrWithPriorAuth.update_authenticated(self, uri, is_authenticated=False)",
        "dis.dis(depth=None)",
        "dis.dis(x=None, depth=None)",
        "file_io.mode",
        "ZipFile.read(name, pwd=None)",
        "zlib.decompress(data, wbits=MAX_WBITS, bufsize=DEF_BUF_SIZE)",
        "socket.sendmsg_afalg(msg, op, iv, assoclen)",
        "shutil.register_archive_format(name, function)",
        "curses.unctrl(ch)",
        "stat.S_IWOTH",
        "_thread.interrupt_main()",
        "test.support.make_legacy_pyc(source)",
        "doc_test_runner.run(test, out=None)",
        "doc_test_runner.run(test)",
        "mailcap.findmatch(caps, MIMEtype, plist=)",
        "TIPC_*",
        "weakref.getweakrefcount(object)",
        "heapq.nlargest(n, iterable)",
        "tkinter.tix.Balloon",
        "ZipInfo.comment",
        "style.theme_create(themename, parent=None, settings=None)",
        "async_exit_stack.push_async_exit(exit)",
        "gc.get_referrers(*objs)",
        "window.instr(y, x)",
        "kevent.udata",
        "@importlib.util.set_loader",
        "str.isupper()",
        "nntplib.NNTP(host)",
        "nntplib.NNTP(host, port=119)",
        "loader.exec_module(module)",
        "pprint.PrettyPrinter(indent=1, compact=False)",
        "source_loader.set_data(path, data)",
        "cgi.print_environ()",
        "types.GeneratorType",
        "struct.size",
        "tracemalloc.get_tracemalloc_memory()",
        "operator.iadd(a, b)",
        "operator.__iadd__(a, b)",
        "shutil.get_terminal_size(lines))",
        "Cmd.ruler",
        "compileall.compile_path(skip_curdir=True, maxlevels=0)",
        "urllib.request.URLopener(**x509)",
        "str.join(iterable)",
        "dir_entry.is_file()",
        "decimal.Context(Emax=None)",
        "NNTP.description(group)",
        "shlex.eof",
        "loop.start_tls(transport, protocol, sslcontext, server_side=False)",
        "xmlparser.GetInputContext()",
        "glob.iglob(pathname)",
        "datetime.timedelta(days=0, microseconds=0)",
        "datetime.timedelta(days=0)",
        "datetime.timedelta(days=0, seconds=0)",
        "datetime.timedelta(seconds=0)",
        "datetime.timedelta(microseconds=0)",
        "base64.a85decode(b, adobe=False)",
        "ossaudiodev.openmixer(device)",
        "socket.getservbyname(servicename)",
        "bdb.dispatch_return(frame, arg)",
        "email_message.get_content_maintype()",
        "sys.getprofile()",
        "Packer.reset()",
        "crypt.METHOD_BLOWFISH",
        "format(value)",
        "format(value, format_spec)",
        "smtplib.LMTP(host='')",
        "smtplib.LMTP(host='', port=LMTP_PORT)",
        "smtplib.LMTP(port=LMTP_PORT)",
        "loop.call_soon_threadsafe(callback, *args, context=None)",
        "SMTP.connect(host='localhost', port=0)",
        "SMTP.connect(host='localhost')",
        "SMTP.connect(port=0)",
        "SMTP.connect()",
        "email.contentmanager.set_content(msg, <'str'>, charset='utf-8'                     cte=None)",
        "shlex.split(s, comments=False)",
        "socket.gethostbyname(hostname)",
        "subprocess.SW_HIDE",
        "curses.is_term_resized(nlines, ncols)",
        "FileCookieJar.save(filename=None, ignore_discard=False, ignore_expires=False)",
        "TarFile.add(name, arcname=None, recursive=True)",
        "datetime.timezone(offset)",
        "typing.Dict(dict, MutableMappingKT, VT)",
        "FileCookieJar.revert(filename=None)",
        "textbox.stripspaces",
        "dispatcher.create_socket(family=socket.AF_INET)",
        "cmath.phase(x)",
        "plistlib.dump(value, fp, sort_keys=True, skipkeys=False)",
        "array.count(x)",
        "profile.run(command, filename=None)",
        "generator.flatten(msg, unixfrom=False)",
        "mailcap.findmatch(caps, MIMEtype, key='view', plist=)",
        "Protocol.eof_received()",
        "file_finder.path_hook(*loader_details)",
        "calendar.TextCalendar(firstweekday=0)",
        "html_diff.__init__(linejunk=None)",
        "contextlib.AsyncExitStack",
        "gzip.decompress(data)",
        "doctest.run_docstring_examples(f, globs, verbose=False)",
        "doctest.testfile(filename, optionflags=0)",
        "bytecode.from_traceback(tb)",
        "NNTP.date()",
        "bdb.set_trace()",
        "Node.cloneNode(deep)",
        "Path.read_text()",
        "types.DynamicClassAttribute(fset=None)",
        "errno.ENOSYS",
        "smtplib.SMTP_SSL()",
        "xml.etree.ElementTree.iterparse(source, parser=None)",
        "source_file_loader.path",
        "print(*objects, sep=' ')",
        "print(*objects)",
        "print(*objects, sep=' ', end='\\n')",
        "print(*objects, end='\\n', file=sys.stdout)",
        "print(*objects, end='\\n')",
        "print(*objects, file=sys.stdout)",
        "print(*objects, sep=' ', file=sys.stdout)",
        "http.client.HTTP_PORT",
        "datetime.time",
        "time.monotonic()",
        "BufferedProtocol.buffer_updated(nbytes)",
        "tempfile.NamedTemporaryFile(dir=None)",
        "ctypes.util.find_library(name)",
        "http.client.HTTPSConnection(host, blocksize=8192)",
        "subprocess.STARTUPINFO(hStdOutput=None)",
        "sequence_matcher.get_matching_blocks()",
        "test.support.wait_threads_exit(timeout=60.0)",
        "context.logical_or(x, y)",
        "element.set(key, value)",
        "PurePath.parent",
        "tempfile.gettempprefix()",
        "urllib.parse.urlencode(query, doseq=False, safe='')",
        "InteractiveInterpreter.showsyntaxerror(filename=None)",
        "date.__format__(format)",
        "datetime.min",
        "OptionParser.has_option(opt_str)",
        "tarfile.open(**kwargs, fileobj=None)",
        "smtpd.SMTPChannel(server, conn, addr, decode_data=False)",
        "decimal.logical_and(other)",
        "configparser.ConfigParser(':'), ';'), inline_comment_prefixes=None)",
        "urllib.parse.urlsplit(urlstring, scheme='')",
        "datetime.fold",
        "time.fold",
        "termios.tcsetattr(fd, when, attributes)",
        "header.encode(\\t', maxlinelen=None)",
        "message.set_payload(payload, charset=None)",
        "importlib.machinery.all_suffixes()",
        "locale.currency(val, international=False)",
        "ExpatError.lineno",
        "venv.EnvBuilder(system_site_packages=False, clear=False)",
        "base64.a85encode(b, foldspaces=False, wrapcol=0)",
        "typing.List(list)",
        "min(iterable, key, default)",
        "test_case.setUp()",
        "gettext.find(domain, localedir=None)",
        "generator.flatten(msg, linesep=None)",
        "ctypes.pointer(obj)",
        "TarFile.extractfile(member)",
        "pyc_invalidation_mode.TIMESTAMP",
        "shutil.copymode(src, dst)",
        "next(iterator, default)",
        "email.message_from_binary_file(fp)",
        "functools.update_wrapper(wrapper, wrapped)",
        "barrier.wait(timeout=None)",
        "plistlib.loads(data, fmt=None)",
        "concurrent.futures.ProcessPoolExecutor(mp_context=None)",
        "concurrent.futures.ProcessPoolExecutor(max_workers=None, mp_context=None)"
    ],
    "lib_fn_snippet_ids": [
        5,
        15,
        16,
        18,
        20,
        23,
        28,
        29,
        32,
        38,
        42,
        43,
        49,
        54,
        56,
        57,
        60,
        62,
        63,
        64,
        65,
        70,
        71,
        90,
        94,
        96,
        102,
        117,
        123,
        124,
        125,
        126,
        127,
        128,
        129,
        132,
        139,
        153,
        163,
        164,
        166,
        172,
        179,
        180,
        181,
        182,
        190,
        191,
        199,
        200,
        202,
        221,
        227,
        230,
        233,
        234,
        251,
        252,
        257,
        260,
        266,
        267,
        282,
        285,
        286,
        287,
        290,
        299,
        305,
        313,
        314,
        324,
        336,
        337,
        338,
        346,
        347,
        348,
        351,
        357,
        359,
        360,
        361,
        362,
        363,
        364,
        365,
        370,
        379,
        380,
        389,
        395,
        396,
        399,
        401,
        403,
        408,
        409,
        410,
        411,
        413
    ]
}